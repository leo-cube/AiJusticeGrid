/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/murder-agent/direct/route";
exports.ids = ["app/api/murder-agent/direct/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fmurder-agent%2Fdirect%2Froute&page=%2Fapi%2Fmurder-agent%2Fdirect%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmurder-agent%2Fdirect%2Froute.ts&appDir=C%3A%5CUsers%5Cuser%5COneDrive%5CDocuments%5CGitHub%5CAiJusticeGrid%5Cinvestigation-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cuser%5COneDrive%5CDocuments%5CGitHub%5CAiJusticeGrid%5Cinvestigation-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fmurder-agent%2Fdirect%2Froute&page=%2Fapi%2Fmurder-agent%2Fdirect%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmurder-agent%2Fdirect%2Froute.ts&appDir=C%3A%5CUsers%5Cuser%5COneDrive%5CDocuments%5CGitHub%5CAiJusticeGrid%5Cinvestigation-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cuser%5COneDrive%5CDocuments%5CGitHub%5CAiJusticeGrid%5Cinvestigation-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_user_OneDrive_Documents_GitHub_AiJusticeGrid_investigation_main_src_app_api_murder_agent_direct_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/murder-agent/direct/route.ts */ \"(rsc)/./src/app/api/murder-agent/direct/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/murder-agent/direct/route\",\n        pathname: \"/api/murder-agent/direct\",\n        filename: \"route\",\n        bundlePath: \"app/api/murder-agent/direct/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\GitHub\\\\AiJusticeGrid\\\\investigation-main\\\\src\\\\app\\\\api\\\\murder-agent\\\\direct\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_user_OneDrive_Documents_GitHub_AiJusticeGrid_investigation_main_src_app_api_murder_agent_direct_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZtdXJkZXItYWdlbnQlMkZkaXJlY3QlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRm11cmRlci1hZ2VudCUyRmRpcmVjdCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRm11cmRlci1hZ2VudCUyRmRpcmVjdCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUN1c2VyJTVDT25lRHJpdmUlNUNEb2N1bWVudHMlNUNHaXRIdWIlNUNBaUp1c3RpY2VHcmlkJTVDaW52ZXN0aWdhdGlvbi1tYWluJTVDc3JjJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUN1c2VyJTVDT25lRHJpdmUlNUNEb2N1bWVudHMlNUNHaXRIdWIlNUNBaUp1c3RpY2VHcmlkJTVDaW52ZXN0aWdhdGlvbi1tYWluJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNxQjtBQUM4RTtBQUMzSjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IseUdBQW1CO0FBQzNDO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNEQUFzRDtBQUM5RDtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUMwRjs7QUFFMUYiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcdXNlclxcXFxPbmVEcml2ZVxcXFxEb2N1bWVudHNcXFxcR2l0SHViXFxcXEFpSnVzdGljZUdyaWRcXFxcaW52ZXN0aWdhdGlvbi1tYWluXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXG11cmRlci1hZ2VudFxcXFxkaXJlY3RcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL211cmRlci1hZ2VudC9kaXJlY3Qvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9tdXJkZXItYWdlbnQvZGlyZWN0XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9tdXJkZXItYWdlbnQvZGlyZWN0L3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcdXNlclxcXFxPbmVEcml2ZVxcXFxEb2N1bWVudHNcXFxcR2l0SHViXFxcXEFpSnVzdGljZUdyaWRcXFxcaW52ZXN0aWdhdGlvbi1tYWluXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXG11cmRlci1hZ2VudFxcXFxkaXJlY3RcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fmurder-agent%2Fdirect%2Froute&page=%2Fapi%2Fmurder-agent%2Fdirect%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmurder-agent%2Fdirect%2Froute.ts&appDir=C%3A%5CUsers%5Cuser%5COneDrive%5CDocuments%5CGitHub%5CAiJusticeGrid%5Cinvestigation-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cuser%5COneDrive%5CDocuments%5CGitHub%5CAiJusticeGrid%5Cinvestigation-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/murder-agent/direct/route.ts":
/*!**************************************************!*\
  !*** ./src/app/api/murder-agent/direct/route.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\n// Murder Agent API URL\nconst MURDER_AGENT_API_URL = process.env.NEXT_PUBLIC_MURDER_AGENT_API_URL || 'http://localhost:5000/api/augment/murder';\n/**\r\n * Direct proxy to the Murder Agent backend\r\n * This avoids CORS issues when calling from the frontend\r\n */ async function POST(request) {\n    try {\n        const body = await request.json();\n        // Validate required fields\n        if (!body.question) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Missing required field: question'\n            }, {\n                status: 400\n            });\n        }\n        const question = body.question;\n        const context = body.context;\n        // Get the session ID if available\n        let sessionId = body.sessionId;\n        // Check if the sessionId is \"new session\" (a string literal) and set it to null\n        if (sessionId === 'new session') {\n            console.log('Received \"new session\" as session ID, setting to null to create a new session');\n            sessionId = null;\n        }\n        console.log('Murder Agent API request:', {\n            question,\n            sessionId: sessionId || 'new session',\n            context: context ? 'provided' : 'not provided'\n        });\n        // Log the full session ID for debugging\n        if (sessionId) {\n            console.log('Using session ID:', sessionId);\n        } else {\n            console.log('No session ID provided, will create a new session');\n        }\n        // Prepare case details for the Murder Agent\n        const caseDetails = {\n            question: question,\n            additional_notes: question,\n            session_id: sessionId || null\n        };\n        // Special handling for different commands\n        if (question === 'CONTINUE_ANALYSIS') {\n            console.log('Detected CONTINUE_ANALYSIS command, setting special flags');\n            caseDetails.question = 'analyze';\n            caseDetails.additional_notes = 'Please complete the analysis';\n            caseDetails.force_analysis = true;\n        } else if (question === 'FORCE_NEW_SESSION') {\n            // Force a completely new session\n            console.log('Detected FORCE_NEW_SESSION command, forcing a new session');\n            caseDetails.question = 'initialize';\n            caseDetails.additional_notes = 'Please start a new conversation';\n            caseDetails.reset_conversation = true;\n            caseDetails.force_new_session = true;\n            // Clear the session ID to ensure a new one is created\n            caseDetails.session_id = null;\n            sessionId = null;\n        } else if (question === '' || !question.trim()) {\n            // If no question is provided, this is likely an initialization request\n            console.log('Empty question detected, treating as initialization request');\n            caseDetails.question = 'initialize';\n            caseDetails.additional_notes = 'Please start a new conversation';\n            caseDetails.reset_conversation = true;\n        }\n        // If forceReset is true, ensure we're creating a new session\n        if (body.forceReset) {\n            console.log('forceReset flag detected, forcing a new session');\n            caseDetails.reset_conversation = true;\n            caseDetails.force_new_session = true;\n            // Clear the session ID to ensure a new one is created\n            caseDetails.session_id = null;\n            sessionId = null;\n        }\n        // Make sure we're explicitly setting the session_id in the request\n        if (sessionId) {\n            console.log('Setting session_id in request:', sessionId);\n            caseDetails.session_id = sessionId;\n        } else {\n            // If no session ID is provided, check if there's one in the context\n            if (context?.sessionId) {\n                console.log('Using session ID from context:', context.sessionId);\n                caseDetails.session_id = context.sessionId;\n            }\n        }\n        // Add case details from context if available\n        if (context) {\n            if (context.caseId) caseDetails.case_id = context.caseId;\n            if (context.caseName) caseDetails.case_name = context.caseName;\n            if (context.caseStatus) caseDetails.case_status = context.caseStatus;\n            if (context.casePriority) caseDetails.case_priority = context.casePriority;\n            if (context.assignedTo) caseDetails.assigned_to = context.assignedTo;\n            if (context.assignedDate) caseDetails.assigned_date = context.assignedDate;\n            if (context.location) caseDetails.location = context.location;\n            if (context.crimeDate) caseDetails.date_of_crime = context.crimeDate;\n            if (context.crimeTime) caseDetails.time_of_crime = context.crimeTime;\n            if (context.victimName) caseDetails.victim_name = context.victimName;\n            if (context.victimAge) caseDetails.victim_age = context.victimAge;\n            if (context.victimGender) caseDetails.victim_gender = context.victimGender;\n            if (context.causeOfDeath) caseDetails.cause_of_death = context.causeOfDeath;\n            if (context.weaponUsed) caseDetails.weapon_used = context.weaponUsed;\n            if (context.crimeSceneDescription) caseDetails.crime_scene_description = context.crimeSceneDescription;\n            if (context.witnesses) caseDetails.witnesses = context.witnesses;\n            if (context.evidence) caseDetails.evidence_found = context.evidence;\n            if (context.suspects) caseDetails.suspects = context.suspects;\n            // Also include any collected data from previous interactions\n            if (context.collectedData) {\n                // Merge collected data with case details, prioritizing collected data\n                Object.entries(context.collectedData).forEach(([key, value])=>{\n                    if (value) {\n                        caseDetails[key] = value;\n                    }\n                });\n            }\n            // Do NOT include the current step from context for the first message\n            // This allows the backend to properly handle the case ID\n            // Only include it for subsequent messages\n            if (context.currentStep && context.currentStep !== 'greeting' && context.currentStep !== 'case_id') {\n                caseDetails.current_step = context.currentStep;\n                console.log('Including current step in request:', context.currentStep);\n            } else {\n                console.log('Not including current step in request to allow proper case ID handling');\n            }\n        }\n        // Only generate a case ID if we're starting a new conversation and no case ID is provided\n        // Let the backend handle the first user input as the case ID\n        if (!caseDetails.case_id && (caseDetails.force_new_session || caseDetails.reset_conversation)) {\n            // Generate a case ID only for new sessions\n            caseDetails.case_id = `case_${Date.now()}`;\n            console.log('Generated case ID for new session:', caseDetails.case_id);\n        }\n        // Important: Do NOT set case_id for regular messages\n        // The backend will handle the first user message as the case ID\n        console.log('Sending case details to Murder Agent:', JSON.stringify(caseDetails));\n        console.log('Calling Murder Agent backend directly from Next.js API route:', MURDER_AGENT_API_URL);\n        // Set a timeout for the API call (60 seconds for analysis generation)\n        const controller = new AbortController();\n        const timeoutId = setTimeout(()=>controller.abort(), 60000); // 60 second timeout\n        try {\n            // Call the Murder Agent API directly\n            const response = await fetch(MURDER_AGENT_API_URL, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(caseDetails),\n                signal: controller.signal\n            });\n            // Clear the timeout\n            clearTimeout(timeoutId);\n            if (!response.ok) {\n                throw new Error(`Murder Agent API error: ${response.statusText}`);\n            }\n            const data = await response.json();\n            console.log('Murder Agent API response:', data);\n            // Log the full response for debugging\n            console.log('Full Murder Agent API response:', JSON.stringify(data));\n            // Log the collected data for debugging\n            if (data.data && data.data.collected_data) {\n                console.log('Collected data from Murder Agent:', data.data.collected_data);\n            }\n            // Log the current step for debugging\n            if (data.data && data.data.current_step) {\n                console.log('Current step from Murder Agent:', data.data.current_step);\n            }\n            // Check if the response has the expected format\n            if (data.success && data.data && data.data.analysis) {\n                // Return the analysis with a marker indicating it's from the live backend\n                console.log('Returning session ID in response:', data.session_id);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    response: data.data.analysis,\n                    source: 'direct-backend',\n                    sessionId: data.session_id || null,\n                    isCollectingInfo: data.data.is_collecting_info || false,\n                    currentStep: data.data.current_step || null,\n                    collectedData: data.data.collected_data || {}\n                }, {\n                    status: 200\n                });\n            } else if (data.data?.analysis) {\n                // Alternative format\n                console.log('Returning session ID in response (alternative format):', data.session_id);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    response: data.data.analysis,\n                    source: 'direct-backend',\n                    sessionId: data.session_id || null,\n                    isCollectingInfo: data.data.is_collecting_info || false,\n                    currentStep: data.data.current_step || null,\n                    collectedData: data.data.collected_data || {}\n                }, {\n                    status: 200\n                });\n            } else if (data.success && data.message) {\n                // Simple success message\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    response: data.message,\n                    source: 'direct-backend',\n                    sessionId: data.session_id || null,\n                    isCollectingInfo: true,\n                    currentStep: 'greeting'\n                }, {\n                    status: 200\n                });\n            } else if (data.response) {\n                // Simple response format\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    response: data.response,\n                    source: 'direct-backend',\n                    sessionId: data.session_id || null,\n                    isCollectingInfo: true,\n                    currentStep: 'greeting'\n                }, {\n                    status: 200\n                });\n            } else {\n                // Try to extract information from the response even if it doesn't match expected formats\n                console.log('Attempting to extract information from non-standard response format:', data);\n                // Check if there's any session_id in the response\n                const sessionId = data.session_id || null;\n                // Check if there's any message or text that could be used as a response\n                let responseText = null;\n                if (data.data && typeof data.data === 'object') {\n                    responseText = data.data.analysis || data.data.message || data.data.response || null;\n                }\n                if (!responseText && typeof data.message === 'string') {\n                    responseText = data.message;\n                }\n                if (!responseText && typeof data.response === 'string') {\n                    responseText = data.response;\n                }\n                // If we found something usable, return it\n                if (responseText) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        response: responseText,\n                        source: 'direct-backend',\n                        sessionId: sessionId,\n                        isCollectingInfo: true,\n                        currentStep: 'greeting'\n                    }, {\n                        status: 200\n                    });\n                }\n                console.error('Invalid response format from Murder Agent API:', data);\n                throw new Error('Invalid response format from Murder Agent API');\n            }\n        } catch (error) {\n            // Clear the timeout if it hasn't fired yet\n            clearTimeout(timeoutId);\n            console.error('Error calling Murder Agent API directly:', error);\n            // If the error is due to the timeout, return a specific message\n            if (error.name === 'AbortError') {\n                // Check if we're at the analysis step (final step)\n                const isAnalysisStep = caseDetails.current_step === 'additional_notes' || caseDetails.collected_data && Object.keys(caseDetails.collected_data).length > 5;\n                if (isAnalysisStep) {\n                    console.log('Timeout occurred during analysis generation, returning a helpful message');\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        response: \"I'm generating a detailed analysis of your case, but it's taking longer than expected. This is normal for complex cases. Please try sending 'continue' or 'analyze' to complete the analysis.\",\n                        source: 'error',\n                        sessionId: caseDetails.session_id || null,\n                        isCollectingInfo: true,\n                        currentStep: 'analysis_pending'\n                    }, {\n                        status: 200\n                    });\n                } else {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        response: \"I'm sorry, but the connection to the Murder Agent backend timed out. Please try again later or check if the backend service is running.\",\n                        source: 'error',\n                        sessionId: null,\n                        isCollectingInfo: false\n                    }, {\n                        status: 200\n                    });\n                }\n            }\n            // Fall back to the original route\n            try {\n                const fallbackResponse = await fetch('/api/murder-agent', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        question,\n                        context\n                    })\n                });\n                if (fallbackResponse.ok) {\n                    const data = await fallbackResponse.json();\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        response: data.response,\n                        source: 'fallback',\n                        sessionId: data.sessionId || null,\n                        isCollectingInfo: data.isCollectingInfo || false,\n                        currentStep: data.currentStep || null,\n                        collectedData: data.collectedData || null\n                    }, {\n                        status: 200\n                    });\n                } else {\n                    throw new Error('Fallback Murder Agent API call failed');\n                }\n            } catch (fallbackError) {\n                console.error('Error with fallback Murder Agent API call:', fallbackError);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    response: `I'm sorry, but I couldn't connect to the Murder Agent backend. The error was: ${error.message}. Please try again later or check if the backend service is running.`,\n                    source: 'error',\n                    sessionId: null,\n                    isCollectingInfo: false\n                }, {\n                    status: 200\n                });\n            }\n        }\n    } catch (error) {\n        console.error('Error processing direct Murder Agent request:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            response: `I'm sorry, but there was an error processing your request: ${error.message}. Please try again.`,\n            source: 'error',\n            sessionId: null,\n            isCollectingInfo: false\n        }, {\n            status: 200\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9tdXJkZXItYWdlbnQvZGlyZWN0L3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJDO0FBRzNDLHVCQUF1QjtBQUN2QixNQUFNQyx1QkFBdUJDLFFBQVFDLEdBQUcsQ0FBQ0MsZ0NBQWdDLElBQUk7QUFFN0U7OztDQUdDLEdBQ00sZUFBZUMsS0FBS0MsT0FBZ0I7SUFDekMsSUFBSTtRQUNGLE1BQU1DLE9BQU8sTUFBTUQsUUFBUUUsSUFBSTtRQUUvQiwyQkFBMkI7UUFDM0IsSUFBSSxDQUFDRCxLQUFLRSxRQUFRLEVBQUU7WUFDbEIsT0FBT1QscURBQVlBLENBQUNRLElBQUksQ0FDdEI7Z0JBQUVFLE9BQU87WUFBbUMsR0FDNUM7Z0JBQUVDLFFBQVE7WUFBSTtRQUVsQjtRQUVBLE1BQU1GLFdBQVdGLEtBQUtFLFFBQVE7UUFDOUIsTUFBTUcsVUFBVUwsS0FBS0ssT0FBTztRQUU1QixrQ0FBa0M7UUFDbEMsSUFBSUMsWUFBWU4sS0FBS00sU0FBUztRQUU5QixnRkFBZ0Y7UUFDaEYsSUFBSUEsY0FBYyxlQUFlO1lBQy9CQyxRQUFRQyxHQUFHLENBQUM7WUFDWkYsWUFBWTtRQUNkO1FBRUFDLFFBQVFDLEdBQUcsQ0FBQyw2QkFBNkI7WUFDdkNOO1lBQ0FJLFdBQVdBLGFBQWE7WUFDeEJELFNBQVNBLFVBQVUsYUFBYTtRQUNsQztRQUVBLHdDQUF3QztRQUN4QyxJQUFJQyxXQUFXO1lBQ2JDLFFBQVFDLEdBQUcsQ0FBQyxxQkFBcUJGO1FBQ25DLE9BQU87WUFDTEMsUUFBUUMsR0FBRyxDQUFDO1FBQ2Q7UUFFQSw0Q0FBNEM7UUFDNUMsTUFBTUMsY0FBbUM7WUFDdkNQLFVBQVVBO1lBQ1ZRLGtCQUFrQlI7WUFDbEJTLFlBQVlMLGFBQWE7UUFDM0I7UUFFQSwwQ0FBMEM7UUFDMUMsSUFBSUosYUFBYSxxQkFBcUI7WUFDcENLLFFBQVFDLEdBQUcsQ0FBQztZQUNaQyxZQUFZUCxRQUFRLEdBQUc7WUFDdkJPLFlBQVlDLGdCQUFnQixH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T0FBT1IscURBQVlBLENBQUNRLElBQUksQ0FBQzt3QkFDdkJrRSxVQUFVUyxLQUFLVCxRQUFRO3dCQUN2QmEsUUFBUTt3QkFDUjFFLFdBQVdzRSxLQUFLdEUsU0FBUyxJQUFJO3dCQUM3QjJFLGtCQUFrQkwsS0FBS0ssZ0JBQWdCLElBQUk7d0JBQzNDekIsYUFBYW9CLEtBQUtwQixXQUFXLElBQUk7d0JBQ2pDTixlQUFlMEIsS0FBSzFCLGFBQWEsSUFBSTtvQkFDdkMsR0FBRzt3QkFBRTlDLFFBQVE7b0JBQUk7Z0JBQ25CLE9BQU87b0JBQ0wsTUFBTSxJQUFJc0UsTUFBTTtnQkFDbEI7WUFDRixFQUFFLE9BQU9nQixlQUFlO2dCQUN0Qm5GLFFBQVFKLEtBQUssQ0FBQyw4Q0FBOEN1RjtnQkFDNUQsT0FBT2pHLHFEQUFZQSxDQUFDUSxJQUFJLENBQUM7b0JBQ3ZCa0UsVUFBVSxDQUFDLDhFQUE4RSxFQUFFaEUsTUFBTWdGLE9BQU8sQ0FBQyxvRUFBb0UsQ0FBQztvQkFDOUtILFFBQVE7b0JBQ1IxRSxXQUFXO29CQUNYMkUsa0JBQWtCO2dCQUNwQixHQUFHO29CQUFFN0UsUUFBUTtnQkFBSTtZQUNuQjtRQUNGO0lBQ0YsRUFBRSxPQUFPRCxPQUFZO1FBQ25CSSxRQUFRSixLQUFLLENBQUMsaURBQWlEQTtRQUMvRCxPQUFPVixxREFBWUEsQ0FBQ1EsSUFBSSxDQUFDO1lBQ3ZCa0UsVUFBVSxDQUFDLDJEQUEyRCxFQUFFaEUsTUFBTWdGLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztZQUMxR0gsUUFBUTtZQUNSMUUsV0FBVztZQUNYMkUsa0JBQWtCO1FBQ3BCLEdBQUc7WUFBRTdFLFFBQVE7UUFBSTtJQUNuQjtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXHVzZXJcXE9uZURyaXZlXFxEb2N1bWVudHNcXEdpdEh1YlxcQWlKdXN0aWNlR3JpZFxcaW52ZXN0aWdhdGlvbi1tYWluXFxzcmNcXGFwcFxcYXBpXFxtdXJkZXItYWdlbnRcXGRpcmVjdFxccm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xyXG5pbXBvcnQgeyBDaGF0Q29udGV4dCB9IGZyb20gJ0AvYXBwL3R5cGVzJztcclxuXHJcbi8vIE11cmRlciBBZ2VudCBBUEkgVVJMXHJcbmNvbnN0IE1VUkRFUl9BR0VOVF9BUElfVVJMID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfTVVSREVSX0FHRU5UX0FQSV9VUkwgfHwgJ2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9hcGkvYXVnbWVudC9tdXJkZXInO1xyXG5cclxuLyoqXHJcbiAqIERpcmVjdCBwcm94eSB0byB0aGUgTXVyZGVyIEFnZW50IGJhY2tlbmRcclxuICogVGhpcyBhdm9pZHMgQ09SUyBpc3N1ZXMgd2hlbiBjYWxsaW5nIGZyb20gdGhlIGZyb250ZW5kXHJcbiAqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0OiBSZXF1ZXN0KSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGJvZHkgPSBhd2FpdCByZXF1ZXN0Lmpzb24oKTtcclxuXHJcbiAgICAvLyBWYWxpZGF0ZSByZXF1aXJlZCBmaWVsZHNcclxuICAgIGlmICghYm9keS5xdWVzdGlvbikge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogJ01pc3NpbmcgcmVxdWlyZWQgZmllbGQ6IHF1ZXN0aW9uJyB9LFxyXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxyXG4gICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHF1ZXN0aW9uID0gYm9keS5xdWVzdGlvbjtcclxuICAgIGNvbnN0IGNvbnRleHQgPSBib2R5LmNvbnRleHQgYXMgQ2hhdENvbnRleHQ7XHJcblxyXG4gICAgLy8gR2V0IHRoZSBzZXNzaW9uIElEIGlmIGF2YWlsYWJsZVxyXG4gICAgbGV0IHNlc3Npb25JZCA9IGJvZHkuc2Vzc2lvbklkO1xyXG5cclxuICAgIC8vIENoZWNrIGlmIHRoZSBzZXNzaW9uSWQgaXMgXCJuZXcgc2Vzc2lvblwiIChhIHN0cmluZyBsaXRlcmFsKSBhbmQgc2V0IGl0IHRvIG51bGxcclxuICAgIGlmIChzZXNzaW9uSWQgPT09ICduZXcgc2Vzc2lvbicpIHtcclxuICAgICAgY29uc29sZS5sb2coJ1JlY2VpdmVkIFwibmV3IHNlc3Npb25cIiBhcyBzZXNzaW9uIElELCBzZXR0aW5nIHRvIG51bGwgdG8gY3JlYXRlIGEgbmV3IHNlc3Npb24nKTtcclxuICAgICAgc2Vzc2lvbklkID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBjb25zb2xlLmxvZygnTXVyZGVyIEFnZW50IEFQSSByZXF1ZXN0OicsIHtcclxuICAgICAgcXVlc3Rpb24sXHJcbiAgICAgIHNlc3Npb25JZDogc2Vzc2lvbklkIHx8ICduZXcgc2Vzc2lvbicsXHJcbiAgICAgIGNvbnRleHQ6IGNvbnRleHQgPyAncHJvdmlkZWQnIDogJ25vdCBwcm92aWRlZCdcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIExvZyB0aGUgZnVsbCBzZXNzaW9uIElEIGZvciBkZWJ1Z2dpbmdcclxuICAgIGlmIChzZXNzaW9uSWQpIHtcclxuICAgICAgY29uc29sZS5sb2coJ1VzaW5nIHNlc3Npb24gSUQ6Jywgc2Vzc2lvbklkKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdObyBzZXNzaW9uIElEIHByb3ZpZGVkLCB3aWxsIGNyZWF0ZSBhIG5ldyBzZXNzaW9uJyk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUHJlcGFyZSBjYXNlIGRldGFpbHMgZm9yIHRoZSBNdXJkZXIgQWdlbnRcclxuICAgIGNvbnN0IGNhc2VEZXRhaWxzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+ID0ge1xyXG4gICAgICBxdWVzdGlvbjogcXVlc3Rpb24sXHJcbiAgICAgIGFkZGl0aW9uYWxfbm90ZXM6IHF1ZXN0aW9uLFxyXG4gICAgICBzZXNzaW9uX2lkOiBzZXNzaW9uSWQgfHwgbnVsbCxcclxuICAgIH07XHJcblxyXG4gICAgLy8gU3BlY2lhbCBoYW5kbGluZyBmb3IgZGlmZmVyZW50IGNvbW1hbmRzXHJcbiAgICBpZiAocXVlc3Rpb24gPT09ICdDT05USU5VRV9BTkFMWVNJUycpIHtcclxuICAgICAgY29uc29sZS5sb2coJ0RldGVjdGVkIENPTlRJTlVFX0FOQUxZU0lTIGNvbW1hbmQsIHNldHRpbmcgc3BlY2lhbCBmbGFncycpO1xyXG4gICAgICBjYXNlRGV0YWlscy5xdWVzdGlvbiA9ICdhbmFseXplJztcclxuICAgICAgY2FzZURldGFpbHMuYWRkaXRpb25hbF9ub3RlcyA9ICdQbGVhc2UgY29tcGxldGUgdGhlIGFuYWx5c2lzJztcclxuICAgICAgY2FzZURldGFpbHMuZm9yY2VfYW5hbHlzaXMgPSB0cnVlO1xyXG4gICAgfSBlbHNlIGlmIChxdWVzdGlvbiA9PT0gJ0ZPUkNFX05FV19TRVNTSU9OJykge1xyXG4gICAgICAvLyBGb3JjZSBhIGNvbXBsZXRlbHkgbmV3IHNlc3Npb25cclxuICAgICAgY29uc29sZS5sb2coJ0RldGVjdGVkIEZPUkNFX05FV19TRVNTSU9OIGNvbW1hbmQsIGZvcmNpbmcgYSBuZXcgc2Vzc2lvbicpO1xyXG4gICAgICBjYXNlRGV0YWlscy5xdWVzdGlvbiA9ICdpbml0aWFsaXplJztcclxuICAgICAgY2FzZURldGFpbHMuYWRkaXRpb25hbF9ub3RlcyA9ICdQbGVhc2Ugc3RhcnQgYSBuZXcgY29udmVyc2F0aW9uJztcclxuICAgICAgY2FzZURldGFpbHMucmVzZXRfY29udmVyc2F0aW9uID0gdHJ1ZTtcclxuICAgICAgY2FzZURldGFpbHMuZm9yY2VfbmV3X3Nlc3Npb24gPSB0cnVlO1xyXG5cclxuICAgICAgLy8gQ2xlYXIgdGhlIHNlc3Npb24gSUQgdG8gZW5zdXJlIGEgbmV3IG9uZSBpcyBjcmVhdGVkXHJcbiAgICAgIGNhc2VEZXRhaWxzLnNlc3Npb25faWQgPSBudWxsO1xyXG4gICAgICBzZXNzaW9uSWQgPSBudWxsO1xyXG4gICAgfSBlbHNlIGlmIChxdWVzdGlvbiA9PT0gJycgfHwgIXF1ZXN0aW9uLnRyaW0oKSkge1xyXG4gICAgICAvLyBJZiBubyBxdWVzdGlvbiBpcyBwcm92aWRlZCwgdGhpcyBpcyBsaWtlbHkgYW4gaW5pdGlhbGl6YXRpb24gcmVxdWVzdFxyXG4gICAgICBjb25zb2xlLmxvZygnRW1wdHkgcXVlc3Rpb24gZGV0ZWN0ZWQsIHRyZWF0aW5nIGFzIGluaXRpYWxpemF0aW9uIHJlcXVlc3QnKTtcclxuICAgICAgY2FzZURldGFpbHMucXVlc3Rpb24gPSAnaW5pdGlhbGl6ZSc7XHJcbiAgICAgIGNhc2VEZXRhaWxzLmFkZGl0aW9uYWxfbm90ZXMgPSAnUGxlYXNlIHN0YXJ0IGEgbmV3IGNvbnZlcnNhdGlvbic7XHJcbiAgICAgIGNhc2VEZXRhaWxzLnJlc2V0X2NvbnZlcnNhdGlvbiA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gSWYgZm9yY2VSZXNldCBpcyB0cnVlLCBlbnN1cmUgd2UncmUgY3JlYXRpbmcgYSBuZXcgc2Vzc2lvblxyXG4gICAgaWYgKGJvZHkuZm9yY2VSZXNldCkge1xyXG4gICAgICBjb25zb2xlLmxvZygnZm9yY2VSZXNldCBmbGFnIGRldGVjdGVkLCBmb3JjaW5nIGEgbmV3IHNlc3Npb24nKTtcclxuICAgICAgY2FzZURldGFpbHMucmVzZXRfY29udmVyc2F0aW9uID0gdHJ1ZTtcclxuICAgICAgY2FzZURldGFpbHMuZm9yY2VfbmV3X3Nlc3Npb24gPSB0cnVlO1xyXG5cclxuICAgICAgLy8gQ2xlYXIgdGhlIHNlc3Npb24gSUQgdG8gZW5zdXJlIGEgbmV3IG9uZSBpcyBjcmVhdGVkXHJcbiAgICAgIGNhc2VEZXRhaWxzLnNlc3Npb25faWQgPSBudWxsO1xyXG4gICAgICBzZXNzaW9uSWQgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIE1ha2Ugc3VyZSB3ZSdyZSBleHBsaWNpdGx5IHNldHRpbmcgdGhlIHNlc3Npb25faWQgaW4gdGhlIHJlcXVlc3RcclxuICAgIGlmIChzZXNzaW9uSWQpIHtcclxuICAgICAgY29uc29sZS5sb2coJ1NldHRpbmcgc2Vzc2lvbl9pZCBpbiByZXF1ZXN0OicsIHNlc3Npb25JZCk7XHJcbiAgICAgIGNhc2VEZXRhaWxzLnNlc3Npb25faWQgPSBzZXNzaW9uSWQ7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBJZiBubyBzZXNzaW9uIElEIGlzIHByb3ZpZGVkLCBjaGVjayBpZiB0aGVyZSdzIG9uZSBpbiB0aGUgY29udGV4dFxyXG4gICAgICBpZiAoY29udGV4dD8uc2Vzc2lvbklkKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ1VzaW5nIHNlc3Npb24gSUQgZnJvbSBjb250ZXh0OicsIGNvbnRleHQuc2Vzc2lvbklkKTtcclxuICAgICAgICBjYXNlRGV0YWlscy5zZXNzaW9uX2lkID0gY29udGV4dC5zZXNzaW9uSWQ7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBBZGQgY2FzZSBkZXRhaWxzIGZyb20gY29udGV4dCBpZiBhdmFpbGFibGVcclxuICAgIGlmIChjb250ZXh0KSB7XHJcbiAgICAgIGlmIChjb250ZXh0LmNhc2VJZCkgY2FzZURldGFpbHMuY2FzZV9pZCA9IGNvbnRleHQuY2FzZUlkO1xyXG4gICAgICBpZiAoY29udGV4dC5jYXNlTmFtZSkgY2FzZURldGFpbHMuY2FzZV9uYW1lID0gY29udGV4dC5jYXNlTmFtZTtcclxuICAgICAgaWYgKGNvbnRleHQuY2FzZVN0YXR1cykgY2FzZURldGFpbHMuY2FzZV9zdGF0dXMgPSBjb250ZXh0LmNhc2VTdGF0dXM7XHJcbiAgICAgIGlmIChjb250ZXh0LmNhc2VQcmlvcml0eSkgY2FzZURldGFpbHMuY2FzZV9wcmlvcml0eSA9IGNvbnRleHQuY2FzZVByaW9yaXR5O1xyXG4gICAgICBpZiAoY29udGV4dC5hc3NpZ25lZFRvKSBjYXNlRGV0YWlscy5hc3NpZ25lZF90byA9IGNvbnRleHQuYXNzaWduZWRUbztcclxuICAgICAgaWYgKGNvbnRleHQuYXNzaWduZWREYXRlKSBjYXNlRGV0YWlscy5hc3NpZ25lZF9kYXRlID0gY29udGV4dC5hc3NpZ25lZERhdGU7XHJcbiAgICAgIGlmIChjb250ZXh0LmxvY2F0aW9uKSBjYXNlRGV0YWlscy5sb2NhdGlvbiA9IGNvbnRleHQubG9jYXRpb247XHJcbiAgICAgIGlmIChjb250ZXh0LmNyaW1lRGF0ZSkgY2FzZURldGFpbHMuZGF0ZV9vZl9jcmltZSA9IGNvbnRleHQuY3JpbWVEYXRlO1xyXG4gICAgICBpZiAoY29udGV4dC5jcmltZVRpbWUpIGNhc2VEZXRhaWxzLnRpbWVfb2ZfY3JpbWUgPSBjb250ZXh0LmNyaW1lVGltZTtcclxuICAgICAgaWYgKGNvbnRleHQudmljdGltTmFtZSkgY2FzZURldGFpbHMudmljdGltX25hbWUgPSBjb250ZXh0LnZpY3RpbU5hbWU7XHJcbiAgICAgIGlmIChjb250ZXh0LnZpY3RpbUFnZSkgY2FzZURldGFpbHMudmljdGltX2FnZSA9IGNvbnRleHQudmljdGltQWdlO1xyXG4gICAgICBpZiAoY29udGV4dC52aWN0aW1HZW5kZXIpIGNhc2VEZXRhaWxzLnZpY3RpbV9nZW5kZXIgPSBjb250ZXh0LnZpY3RpbUdlbmRlcjtcclxuICAgICAgaWYgKGNvbnRleHQuY2F1c2VPZkRlYXRoKSBjYXNlRGV0YWlscy5jYXVzZV9vZl9kZWF0aCA9IGNvbnRleHQuY2F1c2VPZkRlYXRoO1xyXG4gICAgICBpZiAoY29udGV4dC53ZWFwb25Vc2VkKSBjYXNlRGV0YWlscy53ZWFwb25fdXNlZCA9IGNvbnRleHQud2VhcG9uVXNlZDtcclxuICAgICAgaWYgKGNvbnRleHQuY3JpbWVTY2VuZURlc2NyaXB0aW9uKSBjYXNlRGV0YWlscy5jcmltZV9zY2VuZV9kZXNjcmlwdGlvbiA9IGNvbnRleHQuY3JpbWVTY2VuZURlc2NyaXB0aW9uO1xyXG4gICAgICBpZiAoY29udGV4dC53aXRuZXNzZXMpIGNhc2VEZXRhaWxzLndpdG5lc3NlcyA9IGNvbnRleHQud2l0bmVzc2VzO1xyXG4gICAgICBpZiAoY29udGV4dC5ldmlkZW5jZSkgY2FzZURldGFpbHMuZXZpZGVuY2VfZm91bmQgPSBjb250ZXh0LmV2aWRlbmNlO1xyXG4gICAgICBpZiAoY29udGV4dC5zdXNwZWN0cykgY2FzZURldGFpbHMuc3VzcGVjdHMgPSBjb250ZXh0LnN1c3BlY3RzO1xyXG5cclxuICAgICAgLy8gQWxzbyBpbmNsdWRlIGFueSBjb2xsZWN0ZWQgZGF0YSBmcm9tIHByZXZpb3VzIGludGVyYWN0aW9uc1xyXG4gICAgICBpZiAoY29udGV4dC5jb2xsZWN0ZWREYXRhKSB7XHJcbiAgICAgICAgLy8gTWVyZ2UgY29sbGVjdGVkIGRhdGEgd2l0aCBjYXNlIGRldGFpbHMsIHByaW9yaXRpemluZyBjb2xsZWN0ZWQgZGF0YVxyXG4gICAgICAgIE9iamVjdC5lbnRyaWVzKGNvbnRleHQuY29sbGVjdGVkRGF0YSkuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XHJcbiAgICAgICAgICBpZiAodmFsdWUpIHtcclxuICAgICAgICAgICAgY2FzZURldGFpbHNba2V5XSA9IHZhbHVlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBEbyBOT1QgaW5jbHVkZSB0aGUgY3VycmVudCBzdGVwIGZyb20gY29udGV4dCBmb3IgdGhlIGZpcnN0IG1lc3NhZ2VcclxuICAgICAgLy8gVGhpcyBhbGxvd3MgdGhlIGJhY2tlbmQgdG8gcHJvcGVybHkgaGFuZGxlIHRoZSBjYXNlIElEXHJcbiAgICAgIC8vIE9ubHkgaW5jbHVkZSBpdCBmb3Igc3Vic2VxdWVudCBtZXNzYWdlc1xyXG4gICAgICBpZiAoY29udGV4dC5jdXJyZW50U3RlcCAmJiBjb250ZXh0LmN1cnJlbnRTdGVwICE9PSAnZ3JlZXRpbmcnICYmIGNvbnRleHQuY3VycmVudFN0ZXAgIT09ICdjYXNlX2lkJykge1xyXG4gICAgICAgIGNhc2VEZXRhaWxzLmN1cnJlbnRfc3RlcCA9IGNvbnRleHQuY3VycmVudFN0ZXA7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ0luY2x1ZGluZyBjdXJyZW50IHN0ZXAgaW4gcmVxdWVzdDonLCBjb250ZXh0LmN1cnJlbnRTdGVwKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnTm90IGluY2x1ZGluZyBjdXJyZW50IHN0ZXAgaW4gcmVxdWVzdCB0byBhbGxvdyBwcm9wZXIgY2FzZSBJRCBoYW5kbGluZycpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gT25seSBnZW5lcmF0ZSBhIGNhc2UgSUQgaWYgd2UncmUgc3RhcnRpbmcgYSBuZXcgY29udmVyc2F0aW9uIGFuZCBubyBjYXNlIElEIGlzIHByb3ZpZGVkXHJcbiAgICAvLyBMZXQgdGhlIGJhY2tlbmQgaGFuZGxlIHRoZSBmaXJzdCB1c2VyIGlucHV0IGFzIHRoZSBjYXNlIElEXHJcbiAgICBpZiAoIWNhc2VEZXRhaWxzLmNhc2VfaWQgJiYgKGNhc2VEZXRhaWxzLmZvcmNlX25ld19zZXNzaW9uIHx8IGNhc2VEZXRhaWxzLnJlc2V0X2NvbnZlcnNhdGlvbikpIHtcclxuICAgICAgLy8gR2VuZXJhdGUgYSBjYXNlIElEIG9ubHkgZm9yIG5ldyBzZXNzaW9uc1xyXG4gICAgICBjYXNlRGV0YWlscy5jYXNlX2lkID0gYGNhc2VfJHtEYXRlLm5vdygpfWA7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdHZW5lcmF0ZWQgY2FzZSBJRCBmb3IgbmV3IHNlc3Npb246JywgY2FzZURldGFpbHMuY2FzZV9pZCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gSW1wb3J0YW50OiBEbyBOT1Qgc2V0IGNhc2VfaWQgZm9yIHJlZ3VsYXIgbWVzc2FnZXNcclxuICAgIC8vIFRoZSBiYWNrZW5kIHdpbGwgaGFuZGxlIHRoZSBmaXJzdCB1c2VyIG1lc3NhZ2UgYXMgdGhlIGNhc2UgSURcclxuXHJcbiAgICBjb25zb2xlLmxvZygnU2VuZGluZyBjYXNlIGRldGFpbHMgdG8gTXVyZGVyIEFnZW50OicsIEpTT04uc3RyaW5naWZ5KGNhc2VEZXRhaWxzKSk7XHJcblxyXG4gICAgY29uc29sZS5sb2coJ0NhbGxpbmcgTXVyZGVyIEFnZW50IGJhY2tlbmQgZGlyZWN0bHkgZnJvbSBOZXh0LmpzIEFQSSByb3V0ZTonLCBNVVJERVJfQUdFTlRfQVBJX1VSTCk7XHJcblxyXG4gICAgLy8gU2V0IGEgdGltZW91dCBmb3IgdGhlIEFQSSBjYWxsICg2MCBzZWNvbmRzIGZvciBhbmFseXNpcyBnZW5lcmF0aW9uKVxyXG4gICAgY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcclxuICAgIGNvbnN0IHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4gY29udHJvbGxlci5hYm9ydCgpLCA2MDAwMCk7IC8vIDYwIHNlY29uZCB0aW1lb3V0XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgLy8gQ2FsbCB0aGUgTXVyZGVyIEFnZW50IEFQSSBkaXJlY3RseVxyXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKE1VUkRFUl9BR0VOVF9BUElfVVJMLCB7XHJcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgICB9LFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGNhc2VEZXRhaWxzKSxcclxuICAgICAgICBzaWduYWw6IGNvbnRyb2xsZXIuc2lnbmFsXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgLy8gQ2xlYXIgdGhlIHRpbWVvdXRcclxuICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XHJcblxyXG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBNdXJkZXIgQWdlbnQgQVBJIGVycm9yOiAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdNdXJkZXIgQWdlbnQgQVBJIHJlc3BvbnNlOicsIGRhdGEpO1xyXG5cclxuICAgICAgLy8gTG9nIHRoZSBmdWxsIHJlc3BvbnNlIGZvciBkZWJ1Z2dpbmdcclxuICAgICAgY29uc29sZS5sb2coJ0Z1bGwgTXVyZGVyIEFnZW50IEFQSSByZXNwb25zZTonLCBKU09OLnN0cmluZ2lmeShkYXRhKSk7XHJcblxyXG4gICAgICAvLyBMb2cgdGhlIGNvbGxlY3RlZCBkYXRhIGZvciBkZWJ1Z2dpbmdcclxuICAgICAgaWYgKGRhdGEuZGF0YSAmJiBkYXRhLmRhdGEuY29sbGVjdGVkX2RhdGEpIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnQ29sbGVjdGVkIGRhdGEgZnJvbSBNdXJkZXIgQWdlbnQ6JywgZGF0YS5kYXRhLmNvbGxlY3RlZF9kYXRhKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gTG9nIHRoZSBjdXJyZW50IHN0ZXAgZm9yIGRlYnVnZ2luZ1xyXG4gICAgICBpZiAoZGF0YS5kYXRhICYmIGRhdGEuZGF0YS5jdXJyZW50X3N0ZXApIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnQ3VycmVudCBzdGVwIGZyb20gTXVyZGVyIEFnZW50OicsIGRhdGEuZGF0YS5jdXJyZW50X3N0ZXApO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBDaGVjayBpZiB0aGUgcmVzcG9uc2UgaGFzIHRoZSBleHBlY3RlZCBmb3JtYXRcclxuICAgICAgaWYgKGRhdGEuc3VjY2VzcyAmJiBkYXRhLmRhdGEgJiYgZGF0YS5kYXRhLmFuYWx5c2lzKSB7XHJcbiAgICAgICAgLy8gUmV0dXJuIHRoZSBhbmFseXNpcyB3aXRoIGEgbWFya2VyIGluZGljYXRpbmcgaXQncyBmcm9tIHRoZSBsaXZlIGJhY2tlbmRcclxuICAgICAgICBjb25zb2xlLmxvZygnUmV0dXJuaW5nIHNlc3Npb24gSUQgaW4gcmVzcG9uc2U6JywgZGF0YS5zZXNzaW9uX2lkKTtcclxuICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICAgICAgcmVzcG9uc2U6IGRhdGEuZGF0YS5hbmFseXNpcyxcclxuICAgICAgICAgIHNvdXJjZTogJ2RpcmVjdC1iYWNrZW5kJyxcclxuICAgICAgICAgIHNlc3Npb25JZDogZGF0YS5zZXNzaW9uX2lkIHx8IG51bGwsXHJcbiAgICAgICAgICBpc0NvbGxlY3RpbmdJbmZvOiBkYXRhLmRhdGEuaXNfY29sbGVjdGluZ19pbmZvIHx8IGZhbHNlLFxyXG4gICAgICAgICAgY3VycmVudFN0ZXA6IGRhdGEuZGF0YS5jdXJyZW50X3N0ZXAgfHwgbnVsbCxcclxuICAgICAgICAgIGNvbGxlY3RlZERhdGE6IGRhdGEuZGF0YS5jb2xsZWN0ZWRfZGF0YSB8fCB7fVxyXG4gICAgICAgIH0sIHsgc3RhdHVzOiAyMDAgfSk7XHJcbiAgICAgIH0gZWxzZSBpZiAoZGF0YS5kYXRhPy5hbmFseXNpcykge1xyXG4gICAgICAgIC8vIEFsdGVybmF0aXZlIGZvcm1hdFxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdSZXR1cm5pbmcgc2Vzc2lvbiBJRCBpbiByZXNwb25zZSAoYWx0ZXJuYXRpdmUgZm9ybWF0KTonLCBkYXRhLnNlc3Npb25faWQpO1xyXG4gICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XHJcbiAgICAgICAgICByZXNwb25zZTogZGF0YS5kYXRhLmFuYWx5c2lzLFxyXG4gICAgICAgICAgc291cmNlOiAnZGlyZWN0LWJhY2tlbmQnLFxyXG4gICAgICAgICAgc2Vzc2lvbklkOiBkYXRhLnNlc3Npb25faWQgfHwgbnVsbCxcclxuICAgICAgICAgIGlzQ29sbGVjdGluZ0luZm86IGRhdGEuZGF0YS5pc19jb2xsZWN0aW5nX2luZm8gfHwgZmFsc2UsXHJcbiAgICAgICAgICBjdXJyZW50U3RlcDogZGF0YS5kYXRhLmN1cnJlbnRfc3RlcCB8fCBudWxsLFxyXG4gICAgICAgICAgY29sbGVjdGVkRGF0YTogZGF0YS5kYXRhLmNvbGxlY3RlZF9kYXRhIHx8IHt9XHJcbiAgICAgICAgfSwgeyBzdGF0dXM6IDIwMCB9KTtcclxuICAgICAgfSBlbHNlIGlmIChkYXRhLnN1Y2Nlc3MgJiYgZGF0YS5tZXNzYWdlKSB7XHJcbiAgICAgICAgLy8gU2ltcGxlIHN1Y2Nlc3MgbWVzc2FnZVxyXG4gICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XHJcbiAgICAgICAgICByZXNwb25zZTogZGF0YS5tZXNzYWdlLFxyXG4gICAgICAgICAgc291cmNlOiAnZGlyZWN0LWJhY2tlbmQnLFxyXG4gICAgICAgICAgc2Vzc2lvbklkOiBkYXRhLnNlc3Npb25faWQgfHwgbnVsbCxcclxuICAgICAgICAgIGlzQ29sbGVjdGluZ0luZm86IHRydWUsXHJcbiAgICAgICAgICBjdXJyZW50U3RlcDogJ2dyZWV0aW5nJ1xyXG4gICAgICAgIH0sIHsgc3RhdHVzOiAyMDAgfSk7XHJcbiAgICAgIH0gZWxzZSBpZiAoZGF0YS5yZXNwb25zZSkge1xyXG4gICAgICAgIC8vIFNpbXBsZSByZXNwb25zZSBmb3JtYXRcclxuICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICAgICAgcmVzcG9uc2U6IGRhdGEucmVzcG9uc2UsXHJcbiAgICAgICAgICBzb3VyY2U6ICdkaXJlY3QtYmFja2VuZCcsXHJcbiAgICAgICAgICBzZXNzaW9uSWQ6IGRhdGEuc2Vzc2lvbl9pZCB8fCBudWxsLFxyXG4gICAgICAgICAgaXNDb2xsZWN0aW5nSW5mbzogdHJ1ZSxcclxuICAgICAgICAgIGN1cnJlbnRTdGVwOiAnZ3JlZXRpbmcnXHJcbiAgICAgICAgfSwgeyBzdGF0dXM6IDIwMCB9KTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBUcnkgdG8gZXh0cmFjdCBpbmZvcm1hdGlvbiBmcm9tIHRoZSByZXNwb25zZSBldmVuIGlmIGl0IGRvZXNuJ3QgbWF0Y2ggZXhwZWN0ZWQgZm9ybWF0c1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdBdHRlbXB0aW5nIHRvIGV4dHJhY3QgaW5mb3JtYXRpb24gZnJvbSBub24tc3RhbmRhcmQgcmVzcG9uc2UgZm9ybWF0OicsIGRhdGEpO1xyXG5cclxuICAgICAgICAvLyBDaGVjayBpZiB0aGVyZSdzIGFueSBzZXNzaW9uX2lkIGluIHRoZSByZXNwb25zZVxyXG4gICAgICAgIGNvbnN0IHNlc3Npb25JZCA9IGRhdGEuc2Vzc2lvbl9pZCB8fCBudWxsO1xyXG5cclxuICAgICAgICAvLyBDaGVjayBpZiB0aGVyZSdzIGFueSBtZXNzYWdlIG9yIHRleHQgdGhhdCBjb3VsZCBiZSB1c2VkIGFzIGEgcmVzcG9uc2VcclxuICAgICAgICBsZXQgcmVzcG9uc2VUZXh0ID0gbnVsbDtcclxuICAgICAgICBpZiAoZGF0YS5kYXRhICYmIHR5cGVvZiBkYXRhLmRhdGEgPT09ICdvYmplY3QnKSB7XHJcbiAgICAgICAgICByZXNwb25zZVRleHQgPSBkYXRhLmRhdGEuYW5hbHlzaXMgfHwgZGF0YS5kYXRhLm1lc3NhZ2UgfHwgZGF0YS5kYXRhLnJlc3BvbnNlIHx8IG51bGw7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoIXJlc3BvbnNlVGV4dCAmJiB0eXBlb2YgZGF0YS5tZXNzYWdlID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgcmVzcG9uc2VUZXh0ID0gZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKCFyZXNwb25zZVRleHQgJiYgdHlwZW9mIGRhdGEucmVzcG9uc2UgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgICByZXNwb25zZVRleHQgPSBkYXRhLnJlc3BvbnNlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gSWYgd2UgZm91bmQgc29tZXRoaW5nIHVzYWJsZSwgcmV0dXJuIGl0XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlVGV4dCkge1xyXG4gICAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcclxuICAgICAgICAgICAgcmVzcG9uc2U6IHJlc3BvbnNlVGV4dCxcclxuICAgICAgICAgICAgc291cmNlOiAnZGlyZWN0LWJhY2tlbmQnLFxyXG4gICAgICAgICAgICBzZXNzaW9uSWQ6IHNlc3Npb25JZCxcclxuICAgICAgICAgICAgaXNDb2xsZWN0aW5nSW5mbzogdHJ1ZSxcclxuICAgICAgICAgICAgY3VycmVudFN0ZXA6ICdncmVldGluZydcclxuICAgICAgICAgIH0sIHsgc3RhdHVzOiAyMDAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zb2xlLmVycm9yKCdJbnZhbGlkIHJlc3BvbnNlIGZvcm1hdCBmcm9tIE11cmRlciBBZ2VudCBBUEk6JywgZGF0YSk7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHJlc3BvbnNlIGZvcm1hdCBmcm9tIE11cmRlciBBZ2VudCBBUEknKTtcclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xyXG4gICAgICAvLyBDbGVhciB0aGUgdGltZW91dCBpZiBpdCBoYXNuJ3QgZmlyZWQgeWV0XHJcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xyXG5cclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgY2FsbGluZyBNdXJkZXIgQWdlbnQgQVBJIGRpcmVjdGx5OicsIGVycm9yKTtcclxuXHJcbiAgICAgIC8vIElmIHRoZSBlcnJvciBpcyBkdWUgdG8gdGhlIHRpbWVvdXQsIHJldHVybiBhIHNwZWNpZmljIG1lc3NhZ2VcclxuICAgICAgaWYgKGVycm9yLm5hbWUgPT09ICdBYm9ydEVycm9yJykge1xyXG4gICAgICAgIC8vIENoZWNrIGlmIHdlJ3JlIGF0IHRoZSBhbmFseXNpcyBzdGVwIChmaW5hbCBzdGVwKVxyXG4gICAgICAgIGNvbnN0IGlzQW5hbHlzaXNTdGVwID0gY2FzZURldGFpbHMuY3VycmVudF9zdGVwID09PSAnYWRkaXRpb25hbF9ub3RlcycgfHxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGNhc2VEZXRhaWxzLmNvbGxlY3RlZF9kYXRhICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhjYXNlRGV0YWlscy5jb2xsZWN0ZWRfZGF0YSkubGVuZ3RoID4gNSk7XHJcblxyXG4gICAgICAgIGlmIChpc0FuYWx5c2lzU3RlcCkge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coJ1RpbWVvdXQgb2NjdXJyZWQgZHVyaW5nIGFuYWx5c2lzIGdlbmVyYXRpb24sIHJldHVybmluZyBhIGhlbHBmdWwgbWVzc2FnZScpO1xyXG4gICAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcclxuICAgICAgICAgICAgcmVzcG9uc2U6IFwiSSdtIGdlbmVyYXRpbmcgYSBkZXRhaWxlZCBhbmFseXNpcyBvZiB5b3VyIGNhc2UsIGJ1dCBpdCdzIHRha2luZyBsb25nZXIgdGhhbiBleHBlY3RlZC4gVGhpcyBpcyBub3JtYWwgZm9yIGNvbXBsZXggY2FzZXMuIFBsZWFzZSB0cnkgc2VuZGluZyAnY29udGludWUnIG9yICdhbmFseXplJyB0byBjb21wbGV0ZSB0aGUgYW5hbHlzaXMuXCIsXHJcbiAgICAgICAgICAgIHNvdXJjZTogJ2Vycm9yJyxcclxuICAgICAgICAgICAgc2Vzc2lvbklkOiBjYXNlRGV0YWlscy5zZXNzaW9uX2lkIHx8IG51bGwsXHJcbiAgICAgICAgICAgIGlzQ29sbGVjdGluZ0luZm86IHRydWUsXHJcbiAgICAgICAgICAgIGN1cnJlbnRTdGVwOiAnYW5hbHlzaXNfcGVuZGluZydcclxuICAgICAgICAgIH0sIHsgc3RhdHVzOiAyMDAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XHJcbiAgICAgICAgICAgIHJlc3BvbnNlOiBcIkknbSBzb3JyeSwgYnV0IHRoZSBjb25uZWN0aW9uIHRvIHRoZSBNdXJkZXIgQWdlbnQgYmFja2VuZCB0aW1lZCBvdXQuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXIgb3IgY2hlY2sgaWYgdGhlIGJhY2tlbmQgc2VydmljZSBpcyBydW5uaW5nLlwiLFxyXG4gICAgICAgICAgICBzb3VyY2U6ICdlcnJvcicsXHJcbiAgICAgICAgICAgIHNlc3Npb25JZDogbnVsbCxcclxuICAgICAgICAgICAgaXNDb2xsZWN0aW5nSW5mbzogZmFsc2VcclxuICAgICAgICAgIH0sIHsgc3RhdHVzOiAyMDAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBGYWxsIGJhY2sgdG8gdGhlIG9yaWdpbmFsIHJvdXRlXHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgZmFsbGJhY2tSZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL211cmRlci1hZ2VudCcsIHtcclxuICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgcXVlc3Rpb24sIGNvbnRleHQgfSlcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgaWYgKGZhbGxiYWNrUmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBmYWxsYmFja1Jlc3BvbnNlLmpzb24oKTtcclxuICAgICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XHJcbiAgICAgICAgICAgIHJlc3BvbnNlOiBkYXRhLnJlc3BvbnNlLFxyXG4gICAgICAgICAgICBzb3VyY2U6ICdmYWxsYmFjaycsXHJcbiAgICAgICAgICAgIHNlc3Npb25JZDogZGF0YS5zZXNzaW9uSWQgfHwgbnVsbCxcclxuICAgICAgICAgICAgaXNDb2xsZWN0aW5nSW5mbzogZGF0YS5pc0NvbGxlY3RpbmdJbmZvIHx8IGZhbHNlLFxyXG4gICAgICAgICAgICBjdXJyZW50U3RlcDogZGF0YS5jdXJyZW50U3RlcCB8fCBudWxsLFxyXG4gICAgICAgICAgICBjb2xsZWN0ZWREYXRhOiBkYXRhLmNvbGxlY3RlZERhdGEgfHwgbnVsbFxyXG4gICAgICAgICAgfSwgeyBzdGF0dXM6IDIwMCB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWxsYmFjayBNdXJkZXIgQWdlbnQgQVBJIGNhbGwgZmFpbGVkJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGNhdGNoIChmYWxsYmFja0Vycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3Igd2l0aCBmYWxsYmFjayBNdXJkZXIgQWdlbnQgQVBJIGNhbGw6JywgZmFsbGJhY2tFcnJvcik7XHJcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcclxuICAgICAgICAgIHJlc3BvbnNlOiBgSSdtIHNvcnJ5LCBidXQgSSBjb3VsZG4ndCBjb25uZWN0IHRvIHRoZSBNdXJkZXIgQWdlbnQgYmFja2VuZC4gVGhlIGVycm9yIHdhczogJHtlcnJvci5tZXNzYWdlfS4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlciBvciBjaGVjayBpZiB0aGUgYmFja2VuZCBzZXJ2aWNlIGlzIHJ1bm5pbmcuYCxcclxuICAgICAgICAgIHNvdXJjZTogJ2Vycm9yJyxcclxuICAgICAgICAgIHNlc3Npb25JZDogbnVsbCxcclxuICAgICAgICAgIGlzQ29sbGVjdGluZ0luZm86IGZhbHNlXHJcbiAgICAgICAgfSwgeyBzdGF0dXM6IDIwMCB9KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHByb2Nlc3NpbmcgZGlyZWN0IE11cmRlciBBZ2VudCByZXF1ZXN0OicsIGVycm9yKTtcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XHJcbiAgICAgIHJlc3BvbnNlOiBgSSdtIHNvcnJ5LCBidXQgdGhlcmUgd2FzIGFuIGVycm9yIHByb2Nlc3NpbmcgeW91ciByZXF1ZXN0OiAke2Vycm9yLm1lc3NhZ2V9LiBQbGVhc2UgdHJ5IGFnYWluLmAsXHJcbiAgICAgIHNvdXJjZTogJ2Vycm9yJyxcclxuICAgICAgc2Vzc2lvbklkOiBudWxsLFxyXG4gICAgICBpc0NvbGxlY3RpbmdJbmZvOiBmYWxzZVxyXG4gICAgfSwgeyBzdGF0dXM6IDIwMCB9KTtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsIk1VUkRFUl9BR0VOVF9BUElfVVJMIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX01VUkRFUl9BR0VOVF9BUElfVVJMIiwiUE9TVCIsInJlcXVlc3QiLCJib2R5IiwianNvbiIsInF1ZXN0aW9uIiwiZXJyb3IiLCJzdGF0dXMiLCJjb250ZXh0Iiwic2Vzc2lvbklkIiwiY29uc29sZSIsImxvZyIsImNhc2VEZXRhaWxzIiwiYWRkaXRpb25hbF9ub3RlcyIsInNlc3Npb25faWQiLCJmb3JjZV9hbmFseXNpcyIsInJlc2V0X2NvbnZlcnNhdGlvbiIsImZvcmNlX25ld19zZXNzaW9uIiwidHJpbSIsImZvcmNlUmVzZXQiLCJjYXNlSWQiLCJjYXNlX2lkIiwiY2FzZU5hbWUiLCJjYXNlX25hbWUiLCJjYXNlU3RhdHVzIiwiY2FzZV9zdGF0dXMiLCJjYXNlUHJpb3JpdHkiLCJjYXNlX3ByaW9yaXR5IiwiYXNzaWduZWRUbyIsImFzc2lnbmVkX3RvIiwiYXNzaWduZWREYXRlIiwiYXNzaWduZWRfZGF0ZSIsImxvY2F0aW9uIiwiY3JpbWVEYXRlIiwiZGF0ZV9vZl9jcmltZSIsImNyaW1lVGltZSIsInRpbWVfb2ZfY3JpbWUiLCJ2aWN0aW1OYW1lIiwidmljdGltX25hbWUiLCJ2aWN0aW1BZ2UiLCJ2aWN0aW1fYWdlIiwidmljdGltR2VuZGVyIiwidmljdGltX2dlbmRlciIsImNhdXNlT2ZEZWF0aCIsImNhdXNlX29mX2RlYXRoIiwid2VhcG9uVXNlZCIsIndlYXBvbl91c2VkIiwiY3JpbWVTY2VuZURlc2NyaXB0aW9uIiwiY3JpbWVfc2NlbmVfZGVzY3JpcHRpb24iLCJ3aXRuZXNzZXMiLCJldmlkZW5jZSIsImV2aWRlbmNlX2ZvdW5kIiwic3VzcGVjdHMiLCJjb2xsZWN0ZWREYXRhIiwiT2JqZWN0IiwiZW50cmllcyIsImZvckVhY2giLCJrZXkiLCJ2YWx1ZSIsImN1cnJlbnRTdGVwIiwiY3VycmVudF9zdGVwIiwiRGF0ZSIsIm5vdyIsIkpTT04iLCJzdHJpbmdpZnkiLCJjb250cm9sbGVyIiwiQWJvcnRDb250cm9sbGVyIiwidGltZW91dElkIiwic2V0VGltZW91dCIsImFib3J0IiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJzaWduYWwiLCJjbGVhclRpbWVvdXQiLCJvayIsIkVycm9yIiwic3RhdHVzVGV4dCIsImRhdGEiLCJjb2xsZWN0ZWRfZGF0YSIsInN1Y2Nlc3MiLCJhbmFseXNpcyIsInNvdXJjZSIsImlzQ29sbGVjdGluZ0luZm8iLCJpc19jb2xsZWN0aW5nX2luZm8iLCJtZXNzYWdlIiwicmVzcG9uc2VUZXh0IiwibmFtZSIsImlzQW5hbHlzaXNTdGVwIiwia2V5cyIsImxlbmd0aCIsImZhbGxiYWNrUmVzcG9uc2UiLCJmYWxsYmFja0Vycm9yIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/murder-agent/direct/route.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fmurder-agent%2Fdirect%2Froute&page=%2Fapi%2Fmurder-agent%2Fdirect%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmurder-agent%2Fdirect%2Froute.ts&appDir=C%3A%5CUsers%5Cuser%5COneDrive%5CDocuments%5CGitHub%5CAiJusticeGrid%5Cinvestigation-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cuser%5COneDrive%5CDocuments%5CGitHub%5CAiJusticeGrid%5Cinvestigation-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();