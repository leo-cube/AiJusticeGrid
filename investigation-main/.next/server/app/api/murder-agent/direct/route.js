/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/murder-agent/direct/route";
exports.ids = ["app/api/murder-agent/direct/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fmurder-agent%2Fdirect%2Froute&page=%2Fapi%2Fmurder-agent%2Fdirect%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmurder-agent%2Fdirect%2Froute.ts&appDir=%2Fhome%2Fleojamescharles%2FDesktop%2Faijusticegrid%2Finvestigation-main_updated%2FAiJusticeGrid%2Finvestigation-main%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fleojamescharles%2FDesktop%2Faijusticegrid%2Finvestigation-main_updated%2FAiJusticeGrid%2Finvestigation-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fmurder-agent%2Fdirect%2Froute&page=%2Fapi%2Fmurder-agent%2Fdirect%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmurder-agent%2Fdirect%2Froute.ts&appDir=%2Fhome%2Fleojamescharles%2FDesktop%2Faijusticegrid%2Finvestigation-main_updated%2FAiJusticeGrid%2Finvestigation-main%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fleojamescharles%2FDesktop%2Faijusticegrid%2Finvestigation-main_updated%2FAiJusticeGrid%2Finvestigation-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _home_leojamescharles_Desktop_aijusticegrid_investigation_main_updated_AiJusticeGrid_investigation_main_src_app_api_murder_agent_direct_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/murder-agent/direct/route.ts */ \"(rsc)/./src/app/api/murder-agent/direct/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/murder-agent/direct/route\",\n        pathname: \"/api/murder-agent/direct\",\n        filename: \"route\",\n        bundlePath: \"app/api/murder-agent/direct/route\"\n    },\n    resolvedPagePath: \"/home/leojamescharles/Desktop/aijusticegrid/investigation-main_updated/AiJusticeGrid/investigation-main/src/app/api/murder-agent/direct/route.ts\",\n    nextConfigOutput,\n    userland: _home_leojamescharles_Desktop_aijusticegrid_investigation_main_updated_AiJusticeGrid_investigation_main_src_app_api_murder_agent_direct_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZtdXJkZXItYWdlbnQlMkZkaXJlY3QlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRm11cmRlci1hZ2VudCUyRmRpcmVjdCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRm11cmRlci1hZ2VudCUyRmRpcmVjdCUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGbGVvamFtZXNjaGFybGVzJTJGRGVza3RvcCUyRmFpanVzdGljZWdyaWQlMkZpbnZlc3RpZ2F0aW9uLW1haW5fdXBkYXRlZCUyRkFpSnVzdGljZUdyaWQlMkZpbnZlc3RpZ2F0aW9uLW1haW4lMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRmhvbWUlMkZsZW9qYW1lc2NoYXJsZXMlMkZEZXNrdG9wJTJGYWlqdXN0aWNlZ3JpZCUyRmludmVzdGlnYXRpb24tbWFpbl91cGRhdGVkJTJGQWlKdXN0aWNlR3JpZCUyRmludmVzdGlnYXRpb24tbWFpbiZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDZ0c7QUFDN0s7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9ob21lL2xlb2phbWVzY2hhcmxlcy9EZXNrdG9wL2FpanVzdGljZWdyaWQvaW52ZXN0aWdhdGlvbi1tYWluX3VwZGF0ZWQvQWlKdXN0aWNlR3JpZC9pbnZlc3RpZ2F0aW9uLW1haW4vc3JjL2FwcC9hcGkvbXVyZGVyLWFnZW50L2RpcmVjdC9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvbXVyZGVyLWFnZW50L2RpcmVjdC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL211cmRlci1hZ2VudC9kaXJlY3RcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL211cmRlci1hZ2VudC9kaXJlY3Qvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvaG9tZS9sZW9qYW1lc2NoYXJsZXMvRGVza3RvcC9haWp1c3RpY2VncmlkL2ludmVzdGlnYXRpb24tbWFpbl91cGRhdGVkL0FpSnVzdGljZUdyaWQvaW52ZXN0aWdhdGlvbi1tYWluL3NyYy9hcHAvYXBpL211cmRlci1hZ2VudC9kaXJlY3Qvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fmurder-agent%2Fdirect%2Froute&page=%2Fapi%2Fmurder-agent%2Fdirect%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmurder-agent%2Fdirect%2Froute.ts&appDir=%2Fhome%2Fleojamescharles%2FDesktop%2Faijusticegrid%2Finvestigation-main_updated%2FAiJusticeGrid%2Finvestigation-main%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fleojamescharles%2FDesktop%2Faijusticegrid%2Finvestigation-main_updated%2FAiJusticeGrid%2Finvestigation-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/murder-agent/direct/route.ts":
/*!**************************************************!*\
  !*** ./src/app/api/murder-agent/direct/route.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\n// Murder Agent API URL\nconst MURDER_AGENT_API_URL = process.env.NEXT_PUBLIC_MURDER_AGENT_API_URL || 'http://localhost:5000/api/augment/murder';\n/**\n * Direct proxy to the Murder Agent backend\n * This avoids CORS issues when calling from the frontend\n */ async function POST(request) {\n    try {\n        const body = await request.json();\n        // Validate required fields\n        if (!body.question) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Missing required field: question'\n            }, {\n                status: 400\n            });\n        }\n        const question = body.question;\n        const context = body.context;\n        // Get the session ID if available\n        let sessionId = body.sessionId;\n        // Check if the sessionId is \"new session\" (a string literal) and set it to null\n        if (sessionId === 'new session') {\n            console.log('Received \"new session\" as session ID, setting to null to create a new session');\n            sessionId = null;\n        }\n        console.log('Murder Agent API request:', {\n            question,\n            sessionId: sessionId || 'new session',\n            context: context ? 'provided' : 'not provided'\n        });\n        // Log the full session ID for debugging\n        if (sessionId) {\n            console.log('Using session ID:', sessionId);\n        } else {\n            console.log('No session ID provided, will create a new session');\n        }\n        // Prepare case details for the Murder Agent\n        const caseDetails = {\n            question: question,\n            additional_notes: question,\n            session_id: sessionId || null\n        };\n        // Special handling for different commands\n        if (question === 'CONTINUE_ANALYSIS') {\n            console.log('Detected CONTINUE_ANALYSIS command, setting special flags');\n            caseDetails.question = 'analyze';\n            caseDetails.additional_notes = 'Please complete the analysis';\n            caseDetails.force_analysis = true;\n        } else if (question === 'FORCE_NEW_SESSION') {\n            // Force a completely new session\n            console.log('Detected FORCE_NEW_SESSION command, forcing a new session');\n            caseDetails.question = 'initialize';\n            caseDetails.additional_notes = 'Please start a new conversation';\n            caseDetails.reset_conversation = true;\n            caseDetails.force_new_session = true;\n            // Clear the session ID to ensure a new one is created\n            caseDetails.session_id = null;\n            sessionId = null;\n        } else if (question === '' || !question.trim()) {\n            // If no question is provided, this is likely an initialization request\n            console.log('Empty question detected, treating as initialization request');\n            caseDetails.question = 'initialize';\n            caseDetails.additional_notes = 'Please start a new conversation';\n            caseDetails.reset_conversation = true;\n        }\n        // If forceReset is true, ensure we're creating a new session\n        if (body.forceReset) {\n            console.log('forceReset flag detected, forcing a new session');\n            caseDetails.reset_conversation = true;\n            caseDetails.force_new_session = true;\n            // Clear the session ID to ensure a new one is created\n            caseDetails.session_id = null;\n            sessionId = null;\n        }\n        // Make sure we're explicitly setting the session_id in the request\n        if (sessionId) {\n            console.log('Setting session_id in request:', sessionId);\n            caseDetails.session_id = sessionId;\n        } else {\n            // If no session ID is provided, check if there's one in the context\n            if (context?.sessionId) {\n                console.log('Using session ID from context:', context.sessionId);\n                caseDetails.session_id = context.sessionId;\n            }\n        }\n        // Add case details from context if available\n        if (context) {\n            if (context.caseId) caseDetails.case_id = context.caseId;\n            if (context.caseName) caseDetails.case_name = context.caseName;\n            if (context.caseStatus) caseDetails.case_status = context.caseStatus;\n            if (context.casePriority) caseDetails.case_priority = context.casePriority;\n            if (context.assignedTo) caseDetails.assigned_to = context.assignedTo;\n            if (context.assignedDate) caseDetails.assigned_date = context.assignedDate;\n            if (context.location) caseDetails.location = context.location;\n            if (context.crimeDate) caseDetails.date_of_crime = context.crimeDate;\n            if (context.crimeTime) caseDetails.time_of_crime = context.crimeTime;\n            if (context.victimName) caseDetails.victim_name = context.victimName;\n            if (context.victimAge) caseDetails.victim_age = context.victimAge;\n            if (context.victimGender) caseDetails.victim_gender = context.victimGender;\n            if (context.causeOfDeath) caseDetails.cause_of_death = context.causeOfDeath;\n            if (context.weaponUsed) caseDetails.weapon_used = context.weaponUsed;\n            if (context.crimeSceneDescription) caseDetails.crime_scene_description = context.crimeSceneDescription;\n            if (context.witnesses) caseDetails.witnesses = context.witnesses;\n            if (context.evidence) caseDetails.evidence_found = context.evidence;\n            if (context.suspects) caseDetails.suspects = context.suspects;\n            // Also include any collected data from previous interactions\n            if (context.collectedData) {\n                // Merge collected data with case details, prioritizing collected data\n                Object.entries(context.collectedData).forEach(([key, value])=>{\n                    if (value) {\n                        caseDetails[key] = value;\n                    }\n                });\n            }\n            // Do NOT include the current step from context for the first message\n            // This allows the backend to properly handle the case ID\n            // Only include it for subsequent messages\n            if (context.currentStep && context.currentStep !== 'greeting' && context.currentStep !== 'case_id') {\n                caseDetails.current_step = context.currentStep;\n                console.log('Including current step in request:', context.currentStep);\n            } else {\n                console.log('Not including current step in request to allow proper case ID handling');\n            }\n        }\n        // Only generate a case ID if we're starting a new conversation and no case ID is provided\n        // Let the backend handle the first user input as the case ID\n        if (!caseDetails.case_id && (caseDetails.force_new_session || caseDetails.reset_conversation)) {\n            // Generate a case ID only for new sessions\n            caseDetails.case_id = `case_${Date.now()}`;\n            console.log('Generated case ID for new session:', caseDetails.case_id);\n        }\n        // Important: Do NOT set case_id for regular messages\n        // The backend will handle the first user message as the case ID\n        console.log('Sending case details to Murder Agent:', JSON.stringify(caseDetails));\n        console.log('Calling Murder Agent backend directly from Next.js API route:', MURDER_AGENT_API_URL);\n        // Set a timeout for the API call (60 seconds for analysis generation)\n        const controller = new AbortController();\n        const timeoutId = setTimeout(()=>controller.abort(), 60000); // 60 second timeout\n        try {\n            // Call the Murder Agent API directly\n            const response = await fetch(MURDER_AGENT_API_URL, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(caseDetails),\n                signal: controller.signal\n            });\n            // Clear the timeout\n            clearTimeout(timeoutId);\n            if (!response.ok) {\n                throw new Error(`Murder Agent API error: ${response.statusText}`);\n            }\n            const data = await response.json();\n            console.log('Murder Agent API response:', data);\n            // Log the full response for debugging\n            console.log('Full Murder Agent API response:', JSON.stringify(data));\n            // Log the collected data for debugging\n            if (data.data && data.data.collected_data) {\n                console.log('Collected data from Murder Agent:', data.data.collected_data);\n            }\n            // Log the current step for debugging\n            if (data.data && data.data.current_step) {\n                console.log('Current step from Murder Agent:', data.data.current_step);\n            }\n            // Check if the response has the expected format\n            if (data.success && data.data && data.data.analysis) {\n                // Return the analysis with a marker indicating it's from the live backend\n                console.log('Returning session ID in response:', data.session_id);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    response: data.data.analysis,\n                    source: 'direct-backend',\n                    sessionId: data.session_id || null,\n                    isCollectingInfo: data.data.is_collecting_info || false,\n                    currentStep: data.data.current_step || null,\n                    collectedData: data.data.collected_data || {}\n                }, {\n                    status: 200\n                });\n            } else if (data.data?.analysis) {\n                // Alternative format\n                console.log('Returning session ID in response (alternative format):', data.session_id);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    response: data.data.analysis,\n                    source: 'direct-backend',\n                    sessionId: data.session_id || null,\n                    isCollectingInfo: data.data.is_collecting_info || false,\n                    currentStep: data.data.current_step || null,\n                    collectedData: data.data.collected_data || {}\n                }, {\n                    status: 200\n                });\n            } else if (data.success && data.message) {\n                // Simple success message\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    response: data.message,\n                    source: 'direct-backend',\n                    sessionId: data.session_id || null,\n                    isCollectingInfo: true,\n                    currentStep: 'greeting'\n                }, {\n                    status: 200\n                });\n            } else if (data.response) {\n                // Simple response format\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    response: data.response,\n                    source: 'direct-backend',\n                    sessionId: data.session_id || null,\n                    isCollectingInfo: true,\n                    currentStep: 'greeting'\n                }, {\n                    status: 200\n                });\n            } else {\n                // Try to extract information from the response even if it doesn't match expected formats\n                console.log('Attempting to extract information from non-standard response format:', data);\n                // Check if there's any session_id in the response\n                const sessionId = data.session_id || null;\n                // Check if there's any message or text that could be used as a response\n                let responseText = null;\n                if (data.data && typeof data.data === 'object') {\n                    responseText = data.data.analysis || data.data.message || data.data.response || null;\n                }\n                if (!responseText && typeof data.message === 'string') {\n                    responseText = data.message;\n                }\n                if (!responseText && typeof data.response === 'string') {\n                    responseText = data.response;\n                }\n                // If we found something usable, return it\n                if (responseText) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        response: responseText,\n                        source: 'direct-backend',\n                        sessionId: sessionId,\n                        isCollectingInfo: true,\n                        currentStep: 'greeting'\n                    }, {\n                        status: 200\n                    });\n                }\n                console.error('Invalid response format from Murder Agent API:', data);\n                throw new Error('Invalid response format from Murder Agent API');\n            }\n        } catch (error) {\n            // Clear the timeout if it hasn't fired yet\n            clearTimeout(timeoutId);\n            console.error('Error calling Murder Agent API directly:', error);\n            // If the error is due to the timeout, return a specific message\n            if (error.name === 'AbortError') {\n                // Check if we're at the analysis step (final step)\n                const isAnalysisStep = caseDetails.current_step === 'additional_notes' || caseDetails.collected_data && Object.keys(caseDetails.collected_data).length > 5;\n                if (isAnalysisStep) {\n                    console.log('Timeout occurred during analysis generation, returning a helpful message');\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        response: \"I'm generating a detailed analysis of your case, but it's taking longer than expected. This is normal for complex cases. Please try sending 'continue' or 'analyze' to complete the analysis.\",\n                        source: 'error',\n                        sessionId: caseDetails.session_id || null,\n                        isCollectingInfo: true,\n                        currentStep: 'analysis_pending'\n                    }, {\n                        status: 200\n                    });\n                } else {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        response: \"I'm sorry, but the connection to the Murder Agent backend timed out. Please try again later or check if the backend service is running.\",\n                        source: 'error',\n                        sessionId: null,\n                        isCollectingInfo: false\n                    }, {\n                        status: 200\n                    });\n                }\n            }\n            // Fall back to the original route\n            try {\n                const fallbackResponse = await fetch('/api/murder-agent', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        question,\n                        context\n                    })\n                });\n                if (fallbackResponse.ok) {\n                    const data = await fallbackResponse.json();\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        response: data.response,\n                        source: 'fallback',\n                        sessionId: data.sessionId || null,\n                        isCollectingInfo: data.isCollectingInfo || false,\n                        currentStep: data.currentStep || null,\n                        collectedData: data.collectedData || null\n                    }, {\n                        status: 200\n                    });\n                } else {\n                    throw new Error('Fallback Murder Agent API call failed');\n                }\n            } catch (fallbackError) {\n                console.error('Error with fallback Murder Agent API call:', fallbackError);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    response: `I'm sorry, but I couldn't connect to the Murder Agent backend. The error was: ${error.message}. Please try again later or check if the backend service is running.`,\n                    source: 'error',\n                    sessionId: null,\n                    isCollectingInfo: false\n                }, {\n                    status: 200\n                });\n            }\n        }\n    } catch (error) {\n        console.error('Error processing direct Murder Agent request:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            response: `I'm sorry, but there was an error processing your request: ${error.message}. Please try again.`,\n            source: 'error',\n            sessionId: null,\n            isCollectingInfo: false\n        }, {\n            status: 200\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/murder-agent/direct/route.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fmurder-agent%2Fdirect%2Froute&page=%2Fapi%2Fmurder-agent%2Fdirect%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmurder-agent%2Fdirect%2Froute.ts&appDir=%2Fhome%2Fleojamescharles%2FDesktop%2Faijusticegrid%2Finvestigation-main_updated%2FAiJusticeGrid%2Finvestigation-main%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fleojamescharles%2FDesktop%2Faijusticegrid%2Finvestigation-main_updated%2FAiJusticeGrid%2Finvestigation-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();